version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: answer-evaluator-postgres
    environment:
      POSTGRES_DB: answer-evaluator
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: evaluator2025
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d answer-evaluator"]
      interval: 10s
      timeout: 5s
      retries: 5

  # # pgAdmin for Database GUI
  # pgadmin:
  #   image: dpage/pgadmin4:latest
  #   container_name: answer-evaluator-pgadmin
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.com
  #     PGADMIN_DEFAULT_PASSWORD: evaluator2025
  #     PGADMIN_CONFIG_SERVER_MODE: 'False'
  #     PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
  #   volumes:
  #     - ./pgadmin-data:/var/lib/pgadmin
  #   ports:
  #     - "5050:80"
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   networks:
  #     - app-network
  #   restart: unless-stopped

  # MinIO Object Storage
  minio:
    image: quay.io/minio/minio:RELEASE.2025-04-22T22-12-26Z
    container_name: answer-evaluator-minio
    ports:
      - "4656:4656"   # MinIO API
      - "4657:4657"   # MinIO Console
    environment:
      MINIO_ROOT_USER: ROOTUSER
      MINIO_ROOT_PASSWORD: CHANGEME123
    command: server /data --console-address ":4657"
    volumes:
      - ./minio-data:/data  # Use local directory mapping for persistence
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4656/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # MinIO Client for bucket creation
  minio-client:
    image: minio/mc:latest
    container_name: minio-client
    depends_on:
      - minio
    networks:
      - app-network
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set myminio http://minio:4656 ROOTUSER CHANGEME123;
      /usr/bin/mc mb myminio/answer-sheets --ignore-existing;
      /usr/bin/mc policy set public myminio/answer-sheets;
      echo 'MinIO bucket setup complete';
      exit 0;
      "

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: answer-evaluator-backend
    ports:
      - "4659:4659"
    environment:
      DATABASE_URL: postgresql://postgres:evaluator2025@postgres:5432/answer-evaluator?schema=public
      MINIO_ENDPOINT: minio:4656
      MINIO_PUBLIC_ENDPOINT: localhost:4656
      MINIO_ACCESS_KEY: ROOTUSER
      MINIO_SECRET_KEY: CHANGEME123
      MINIO_BUCKET: answer-sheets
      MINIO_USE_SSL: false
      JWT_SECRET: ${JWT_SECRET}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      PORT: 4659
      ADMIN_USERNAME: ${ADMIN_USERNAME}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      NODE_ENV: production
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    command: >
      sh -c "
        echo '🔄 Waiting for database to be ready...' &&
        sleep 5 &&
        echo '📦 Installing dependencies...' &&
        npm install &&
        echo '🗃️ Running Prisma migrations...' &&
        npx prisma migrate deploy &&
        echo '📊 Generating Prisma client...' &&
        npx prisma generate &&
        echo '🚀 Starting application...' &&
        npm start
      "

networks:
  app-network:
    driver: bridge