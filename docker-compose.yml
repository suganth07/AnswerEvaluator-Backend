version: '3.8'

services:
  # MinIO Object Storage
  minio:
    image: quay.io/minio/minio:RELEASE.2025-04-22T22-12-26Z
    container_name: minio-server
    ports:
      - "9000:9000"   # MinIO API
      - "9001:9001"   # MinIO Console
    environment:
      MINIO_ROOT_USER: ROOTUSER
      MINIO_ROOT_PASSWORD: CHANGEME123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # MinIO Client for bucket creation
  minio-client:
    image: minio/mc:latest
    container_name: minio-client
    depends_on:
      - minio
    networks:
      - app-network
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set myminio http://minio:9000 ROOTUSER CHANGEME123;
      /usr/bin/mc mb myminio/answer-sheets --ignore-existing;
      /usr/bin/mc policy set public myminio/answer-sheets;
      echo 'MinIO bucket setup complete';
      exit 0;
      "

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend-api
    ports:
      - "10.207.111.32:3000:3000"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: ROOTUSER
      MINIO_SECRET_KEY: CHANGEME123
      MINIO_BUCKET: answer-sheets
      MINIO_USE_SSL: false
      JWT_SECRET: ${JWT_SECRET}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      PORT: ${PORT}
      ADMIN_USERNAME: ${ADMIN_USERNAME}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
    depends_on:
      - minio
    networks:
      - app-network
    restart: unless-stopped

volumes:
  minio_data:
    driver: local

networks:
  app-network:
    driver: bridge